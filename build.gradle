// Versions.
ext.mpsVersion = '2020.2';

// Gradle related settings.
buildscript {
    repositories {
        maven { url 'https://projects.itemis.de/nexus/content/repositories/mbeddr' }
        mavenCentral()
    }
    dependencies {
        classpath 'de.itemis.mps:mps-gradle-plugin:1.4.+'
    }
}
import de.itemis.mps.gradle.*
wrapper {
    gradleVersion '6.4'
}
apply plugin: 'base'
configurations {
    mps
    junitAnt
}
// Configure mps-gradle-plugin.
def mpsDir = "$buildDir/mps"
def jdkHome = System.getProperty('java.home')
def buildScriptClasspath = project.configurations.junitAnt.fileCollection { true } +
        project.files("$jdkHome/lib/tools.jar")
def defaultScriptArgs = [
	'mps_home': mpsDir
]
ext["itemis.mps.gradle.ant.defaultScriptArgs"] = defaultScriptArgs.collect { "-D$it.key=$it.value".toString() }
ext["itemis.mps.gradle.ant.defaultScriptClasspath"] = buildScriptClasspath
ext["itemis.mps.gradle.ant.defaultJavaExecutable"] = file("$jdkHome/bin/java")

// Build settings.
repositories {
    mavenLocal()
    maven {
		url 'https://projects.itemis.de/nexus/content/repositories/mbeddr'
	}
    mavenCentral()
}
dependencies {
    mps "com.jetbrains:mps:$mpsVersion"
    junitAnt "org.apache.ant:ant-junit:1.10.9"
}
// MPS part.
task resolveMps(type: Copy) {
    dependsOn configurations.mps
    from {
        configurations.mps.resolve().collect { zipTree(it) }
    }
    into mpsDir
}
// ecmascript4mps part.
task buildEcmascript4mps(type: BuildLanguages) {
    dependsOn "resolveMps"
	script "$projectDir/build.xml"
}
defaultTasks 'buildEcmascript4mps'
